<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>MarkDown语法</title>
    <url>/2020/10/17/MarkDown%E8%AF%AD%E6%B3%95/</url>
    <content><![CDATA[<p><strong>MarkDown语法</strong></p>
<p><img src="/images_blog/MarkDown-language/MarkDown-language-1.png" alt="avatar"></p>
<a id="more"></a>

<h3 id="标题使用"><a href="#标题使用" class="headerlink" title="标题使用"></a>标题使用</h3><p>【#】后面记得空格</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"># 标题H1</span><br><span class="line"></span><br><span class="line">## 标题H2</span><br><span class="line"></span><br><span class="line">### 标题H3</span><br><span class="line"></span><br><span class="line">#### 标题H4</span><br><span class="line"></span><br><span class="line">##### 标题H5</span><br><span class="line"></span><br><span class="line">###### 标题H5</span><br></pre></td></tr></table></figure>
<h3 id="字符效果和横线等"><a href="#字符效果和横线等" class="headerlink" title="字符效果和横线等"></a>字符效果和横线等</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">---   一条虚线</span><br><span class="line"></span><br><span class="line">~~删除线~~ <span class="tag">&lt;<span class="name">s</span>&gt;</span>删除线（开启识别HTML标签时）<span class="tag">&lt;/<span class="name">s</span>&gt;</span></span><br><span class="line"></span><br><span class="line">*斜体字* _斜体字_</span><br><span class="line"></span><br><span class="line">**粗体**  __粗体__</span><br><span class="line"></span><br><span class="line">***粗斜体*** ___粗斜体___</span><br><span class="line"></span><br><span class="line">上标：X<span class="tag">&lt;<span class="name">sub</span>&gt;</span>2<span class="tag">&lt;/<span class="name">sub</span>&gt;</span>，下标：O<span class="tag">&lt;<span class="name">sup</span>&gt;</span>2<span class="tag">&lt;/<span class="name">sup</span>&gt;</span></span><br><span class="line"></span><br><span class="line">**缩写(同HTML的abbr标签)**</span><br><span class="line">&gt; 即更长的单词或短语的缩写形式，前提是开启识别HTML标签时，已默认开启</span><br><span class="line"></span><br><span class="line">The <span class="tag">&lt;<span class="name">abbr</span> <span class="attr">title</span>=<span class="string">&quot;Hyper Text Markup Language&quot;</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">abbr</span>&gt;</span> specification is maintained by the <span class="tag">&lt;<span class="name">abbr</span> <span class="attr">title</span>=<span class="string">&quot;World Wide Web Consortium&quot;</span>&gt;</span>W3C<span class="tag">&lt;/<span class="name">abbr</span>&gt;</span>.</span><br></pre></td></tr></table></figure>

<h3 id="引用-Blockquotes"><a href="#引用-Blockquotes" class="headerlink" title="引用 Blockquotes"></a>引用 Blockquotes</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&gt; 引用文本 Blockquotes</span><br><span class="line"></span><br><span class="line">引用的行内混合 Blockquotes</span><br><span class="line"></span><br><span class="line">&gt; 引用：如果想要插入空白换行`即<span class="tag">&lt;<span class="name">br</span> /&gt;</span>标签`，在插入处先键入两个以上的空格然后回车即可，[普通链接](https://www.mdeditor.com/)。</span><br></pre></td></tr></table></figure>

<h3 id="锚点与链接-Links"><a href="#锚点与链接-Links" class="headerlink" title="锚点与链接 Links"></a>锚点与链接 Links</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">[普通链接](https://www.mdeditor.com/)</span><br><span class="line">[普通链接带标题](https://www.mdeditor.com/ &quot;普通链接带标题&quot;)</span><br><span class="line">直接链接：<span class="tag">&lt;<span class="name">https:</span>//<span class="attr">www.mdeditor.com</span>&gt;</span></span><br><span class="line">[锚点链接][anchor-id]</span><br><span class="line">[anchor-id]: https://www.mdeditor.com/</span><br><span class="line">[mailto:test.test@gmail.com](mailto:test.test@gmail.com)</span><br><span class="line">GFM a-tail link @pandao</span><br><span class="line">邮箱地址自动链接 test.test@gmail.com  www@vip.qq.com</span><br><span class="line">&gt; @pandao</span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">### 多语言代码高亮 Codes</span><br><span class="line"></span><br><span class="line">#### 行内代码 Inline code</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">执行命令：`npm install marked`</span><br></pre></td></tr></table></figure>

<h4 id="缩进风格"><a href="#缩进风格" class="headerlink" title="缩进风格"></a>缩进风格</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">即缩进四个空格，也做为实现类似 `<span class="tag">&lt;<span class="name">pre</span>&gt;</span>` 预格式化文本 ( Preformatted Text ) 的功能。</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">?php</span></span></span><br><span class="line"><span class="tag">        <span class="attr">echo</span> &quot;<span class="attr">Hello</span> <span class="attr">world</span>!&quot;;</span></span><br><span class="line"><span class="tag">    ?&gt;</span></span><br><span class="line">预格式化文本：</span><br><span class="line"></span><br><span class="line">    | First Header  | Second Header |</span><br><span class="line">    | ------------- | ------------- |</span><br><span class="line">    | Content Cell  | Content Cell  |</span><br><span class="line">    | Content Cell  | Content Cell  |</span><br></pre></td></tr></table></figure>

<h4 id="JS代码"><a href="#JS代码" class="headerlink" title="JS代码"></a>JS代码</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">	<span class="built_in">console</span>.log(<span class="string">&quot;Hello world!&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="HTML-代码-HTML-codes"><a href="#HTML-代码-HTML-codes" class="headerlink" title="HTML 代码 HTML codes"></a>HTML 代码 HTML codes</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mate</span> <span class="attr">charest</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;keywords&quot;</span> <span class="attr">content</span>=<span class="string">&quot;Editor.md, Markdown, Editor&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Hello world!<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">body</span>&#123;<span class="attribute">font-size</span>:<span class="number">14px</span>;<span class="attribute">color</span>:<span class="number">#444</span>;<span class="attribute">font-family</span>: <span class="string">&quot;Microsoft Yahei&quot;</span>, Tahoma, <span class="string">&quot;Hiragino Sans GB&quot;</span>, Arial;<span class="attribute">background</span>:<span class="number">#fff</span>;&#125;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">ul</span>&#123;<span class="attribute">list-style</span>: none;&#125;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">img</span>&#123;<span class="attribute">border</span>:none;<span class="attribute">vertical-align</span>: middle;&#125;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;text-xxl&quot;</span>&gt;</span>Hello world!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;text-green&quot;</span>&gt;</span>Plain text<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="图片-Images"><a href="#图片-Images" class="headerlink" title="图片 Images"></a>图片 Images</h3><p>图片加链接 (Image + Link)：</p>
<p><a href="https://www.mdeditor.com/images/logos/markdown.png" title="markdown"><img src="https://www.mdeditor.com/images/logos/markdown.png"></a></p>
<blockquote>
<p>Follow your heart.</p>
</blockquote>
<hr>
<h3 id="列表-Lists"><a href="#列表-Lists" class="headerlink" title="列表 Lists"></a>列表 Lists</h3><h4 id="无序列表（减号）Unordered-Lists"><a href="#无序列表（减号）Unordered-Lists" class="headerlink" title="无序列表（减号）Unordered Lists (-)"></a>无序列表（减号）Unordered Lists (-)</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">- 列表一</span><br><span class="line">- 列表二</span><br><span class="line">- 列表三</span><br></pre></td></tr></table></figure>


<h4 id="无序列表（星号）Unordered-Lists"><a href="#无序列表（星号）Unordered-Lists" class="headerlink" title="无序列表（星号）Unordered Lists (*)"></a>无序列表（星号）Unordered Lists (*)</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">* 列表一</span><br><span class="line">* 列表二</span><br><span class="line">* 列表三</span><br></pre></td></tr></table></figure>


<h4 id="无序列表（加号和嵌套）Unordered-Lists"><a href="#无序列表（加号和嵌套）Unordered-Lists" class="headerlink" title="无序列表（加号和嵌套）Unordered Lists (+)"></a>无序列表（加号和嵌套）Unordered Lists (+)</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">+ 列表一</span><br><span class="line">+ 列表二</span><br><span class="line">    + 列表二-1</span><br><span class="line">    + 列表二-2</span><br><span class="line">    + 列表二-3</span><br><span class="line">+ 列表三</span><br><span class="line">    * 列表一</span><br><span class="line">    * 列表二</span><br><span class="line">    * 列表三</span><br></pre></td></tr></table></figure>


<h4 id="有序列表-Ordered-Lists"><a href="#有序列表-Ordered-Lists" class="headerlink" title="有序列表 Ordered Lists (-)"></a>有序列表 Ordered Lists (-)</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">1. 第一行</span><br><span class="line">2. 第二行</span><br><span class="line">3. 第三行</span><br></pre></td></tr></table></figure>

<h4 id="GFM-task-list"><a href="#GFM-task-list" class="headerlink" title="GFM task list"></a>GFM task list</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">- [x] GFM task list 1</span><br><span class="line">- [x] GFM task list 2</span><br><span class="line">- [ ] GFM task list 3</span><br><span class="line">    - [ ] GFM task list 3-1</span><br><span class="line">    - [ ] GFM task list 3-2</span><br><span class="line">    - [ ] GFM task list 3-3</span><br><span class="line">- [ ] GFM task list 4</span><br><span class="line">    - [ ] GFM task list 4-1</span><br><span class="line">    - [ ] GFM task list 4-2</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="绘制表格-Tables"><a href="#绘制表格-Tables" class="headerlink" title="绘制表格 Tables"></a>绘制表格 Tables</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">| 项目        | 价格   |  数量  |</span><br><span class="line">| --------   | -----:  | :----:  |</span><br><span class="line">| 计算机      | $1600   |   5     |</span><br><span class="line">| 手机        |   $12   |   12   |</span><br><span class="line">| 管线        |    $1    |  234  |</span><br><span class="line"></span><br><span class="line">First Header  | Second Header</span><br><span class="line">------------- | -------------</span><br><span class="line">Content Cell  | Content Cell</span><br><span class="line">Content Cell  | Content Cell</span><br><span class="line"></span><br><span class="line">| First Header  | Second Header |</span><br><span class="line">| ------------- | ------------- |</span><br><span class="line">| Content Cell  | Content Cell  |</span><br><span class="line">| Content Cell  | Content Cell  |</span><br><span class="line"></span><br><span class="line">| Function name | Description                    |</span><br><span class="line">| ------------- | ------------------------------ |</span><br><span class="line">| `help()`      | Display the help window.       |</span><br><span class="line">| `destroy()`   | **Destroy your computer!**     |</span><br><span class="line"></span><br><span class="line">| Left-Aligned  | Center Aligned  | Right Aligned |</span><br><span class="line">| :------------ |:---------------:| -----:|</span><br><span class="line">| col 3 is      | some wordy text | $1600 |</span><br><span class="line">| col 2 is      | centered        |   $12 |</span><br><span class="line">| zebra stripes | are neat        |    $1 |</span><br><span class="line"></span><br><span class="line">| Item      | Value |</span><br><span class="line">| --------- | -----:|</span><br><span class="line">| Computer  | $1600 |</span><br><span class="line">| Phone     |   $12 |</span><br><span class="line">| Pipe      |    $1 |</span><br></pre></td></tr></table></figure>
<hr>
<h4 id="特殊符号-HTML-Entities-Codes"><a href="#特殊符号-HTML-Entities-Codes" class="headerlink" title="特殊符号 HTML Entities Codes"></a>特殊符号 HTML Entities Codes</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="symbol">&amp;copy;</span> &amp;  <span class="symbol">&amp;uml;</span> <span class="symbol">&amp;trade;</span> <span class="symbol">&amp;iexcl;</span> <span class="symbol">&amp;pound;</span></span><br><span class="line"><span class="symbol">&amp;amp;</span> <span class="symbol">&amp;lt;</span> <span class="symbol">&amp;gt;</span> <span class="symbol">&amp;yen;</span> <span class="symbol">&amp;euro;</span> <span class="symbol">&amp;reg;</span> <span class="symbol">&amp;plusmn;</span> <span class="symbol">&amp;para;</span> <span class="symbol">&amp;sect;</span> <span class="symbol">&amp;brvbar;</span> <span class="symbol">&amp;macr;</span> <span class="symbol">&amp;laquo;</span> <span class="symbol">&amp;middot;</span></span><br><span class="line"></span><br><span class="line">X&amp;sup2; Y&amp;sup3; &amp;frac34; &amp;frac14;  <span class="symbol">&amp;times;</span>  <span class="symbol">&amp;divide;</span>   <span class="symbol">&amp;raquo;</span></span><br><span class="line"></span><br><span class="line">18<span class="symbol">&amp;ordm;</span>C  <span class="symbol">&amp;quot;</span>  <span class="symbol">&amp;apos;</span></span><br></pre></td></tr></table></figure>
<p>[========]</p>
<h3 id="Emoji表情-smiley"><a href="#Emoji表情-smiley" class="headerlink" title="Emoji表情 :smiley:"></a>Emoji表情 :smiley:</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&gt; Blockquotes :star:</span><br></pre></td></tr></table></figure>

<h4 id="GFM-task-lists-amp-Emoji-amp-fontAwesome-icon-emoji-amp-editormd-logo-emoji-editormd-logo-5x"><a href="#GFM-task-lists-amp-Emoji-amp-fontAwesome-icon-emoji-amp-editormd-logo-emoji-editormd-logo-5x" class="headerlink" title="GFM task lists &amp; Emoji &amp; fontAwesome icon emoji &amp; editormd logo emoji :editormd-logo-5x:"></a>GFM task lists &amp; Emoji &amp; fontAwesome icon emoji &amp; editormd logo emoji :editormd-logo-5x:</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">- [x] :smiley: @mentions, :smiley: #refs, [links](), **formatting**, and <span class="tag">&lt;<span class="name">del</span>&gt;</span>tags<span class="tag">&lt;/<span class="name">del</span>&gt;</span> supported :editormd-logo:;</span><br><span class="line">- [x] list syntax required (any unordered or ordered list supported) :editormd-logo-3x:;</span><br><span class="line">- [x] [ ] :smiley: this is a complete item :smiley:;</span><br><span class="line">- [ ] []this is an incomplete item [test link](#) :fa-star: @pandao;</span><br><span class="line">- [ ] [ ]this is an incomplete item :fa-star: :fa-gear:;</span><br><span class="line">    - [ ] :smiley: this is an incomplete item [test link](#) :fa-star: :fa-gear:;</span><br><span class="line">    - [ ] :smiley: this is  :fa-star: :fa-gear: an incomplete item [test link](#);</span><br></pre></td></tr></table></figure>
<h4 id="反斜杠-Escape"><a href="#反斜杠-Escape" class="headerlink" title="反斜杠 Escape"></a>反斜杠 Escape</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">\*literal asterisks\*</span><br></pre></td></tr></table></figure>
<p>[========]</p>
<h3 id="科学公式-TeX-KaTeX"><a href="#科学公式-TeX-KaTeX" class="headerlink" title="科学公式 TeX(KaTeX)"></a>科学公式 TeX(KaTeX)</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$$E=mc^2$$</span><br><span class="line"></span><br><span class="line">行内的公式$$E=mc^2$$行内的公式，行内的$$E=mc^2$$公式。</span><br><span class="line"></span><br><span class="line">$$x &gt; y$$</span><br><span class="line"></span><br><span class="line">$$\(\sqrt&#123;3x-1&#125;+(1+x)^2\)$$</span><br><span class="line"></span><br><span class="line">$$\sin(\alpha)^&#123;\theta&#125;=\sum_&#123;i=0&#125;^&#123;n&#125;(x^i + \cos(f))$$</span><br></pre></td></tr></table></figure>
<p>多行公式：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\displaystyle</span><br><span class="line">\left( \sum\_&#123;k&#x3D;1&#125;^n a\_k b\_k \right)^2</span><br><span class="line">\leq</span><br><span class="line">\left( \sum\_&#123;k&#x3D;1&#125;^n a\_k^2 \right)</span><br><span class="line">\left( \sum\_&#123;k&#x3D;1&#125;^n b\_k^2 \right)</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\displaystyle</span><br><span class="line">    \frac&#123;1&#125;&#123;</span><br><span class="line">        \Bigl(\sqrt&#123;\phi \sqrt&#123;5&#125;&#125;-\phi\Bigr) e^&#123;</span><br><span class="line">        \frac25 \pi&#125;&#125; &#x3D; 1+\frac&#123;e^&#123;-2\pi&#125;&#125; &#123;1+\frac&#123;e^&#123;-4\pi&#125;&#125; &#123;</span><br><span class="line">        1+\frac&#123;e^&#123;-6\pi&#125;&#125;</span><br><span class="line">        &#123;1+\frac&#123;e^&#123;-8\pi&#125;&#125;</span><br><span class="line">         &#123;1+\cdots&#125; &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line">f(x) = <span class="tag">\<span class="name">int</span></span>_&#123;-<span class="tag">\<span class="name">infty</span></span>&#125;^<span class="tag">\<span class="name">infty</span></span></span><br><span class="line">    <span class="tag">\<span class="name">hat</span></span> f(<span class="tag">\<span class="name">xi</span></span>)<span class="tag">\<span class="name">,</span></span>e^&#123;2 <span class="tag">\<span class="name">pi</span></span> i <span class="tag">\<span class="name">xi</span></span> x&#125;</span><br><span class="line">    <span class="tag">\<span class="name">,</span></span>d<span class="tag">\<span class="name">xi</span></span></span><br></pre></td></tr></table></figure>
<h3 id="分页符-Page-break"><a href="#分页符-Page-break" class="headerlink" title="分页符 Page break"></a>分页符 Page break</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&gt; Print Test: Ctrl + P</span><br></pre></td></tr></table></figure>
<p>[========]</p>
<h3 id="绘制流程图-Flowchart"><a href="#绘制流程图-Flowchart" class="headerlink" title="绘制流程图 Flowchart"></a>绘制流程图 Flowchart</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">st&#x3D;&gt;start: 用户登陆</span><br><span class="line">op&#x3D;&gt;operation: 登陆操作</span><br><span class="line">cond&#x3D;&gt;condition: 登陆成功 Yes or No?</span><br><span class="line">e&#x3D;&gt;end: 进入后台</span><br><span class="line"></span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br></pre></td></tr></table></figure>
<p>[========]</p>
<h3 id="绘制序列图-Sequence-Diagram"><a href="#绘制序列图-Sequence-Diagram" class="headerlink" title="绘制序列图 Sequence Diagram"></a>绘制序列图 Sequence Diagram</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Andrew-&gt;China: Says Hello</span><br><span class="line">Note right of China: China thinks\nabout it</span><br><span class="line">China--&gt;Andrew: How are you?</span><br><span class="line">Andrew-&gt;&gt;China: I am good thanks!</span><br></pre></td></tr></table></figure>
<h3 id="End"><a href="#End" class="headerlink" title="End"></a>End</h3><p><em>如对博文有什么建议，或者问题请进入关于页面联系博主</em></p>
]]></content>
      <categories>
        <category>使用</category>
      </categories>
      <tags>
        <tag>语法</tag>
      </tags>
  </entry>
  <entry>
    <title>git安装</title>
    <url>/2020/10/22/git%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<p><strong>git安装详细教程</strong></p>
<p><img src="/images_blog/git-install/git-install-1.png" alt="gti"></p>
<a id="more"></a>

<h2 id="下载git"><a href="#下载git" class="headerlink" title="下载git"></a>下载git</h2><p><a href="https://git-scm.com/downloads">单击下载</a></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>双击进入安装程序</p>
<ol>
<li>使用许可声明</li>
</ol>
<p><img src="/images_blog/git-install/git-install-2.png" alt="gti"></p>
<blockquote>
<p>点击next进入下一个界面</p>
</blockquote>
<ol start="2">
<li>选择安装路径</li>
</ol>
<p><img src="/images_blog/git-install/git-install-3.png" alt="gti"></p>
<blockquote>
<p>选择安装目录后点击next</p>
</blockquote>
<ol start="3">
<li>选择安装组件</li>
</ol>
<p><img src="/images_blog/git-install/git-install-4.png" alt="gti"></p>
<blockquote>
<p>上图红框内的选项是默认勾选的，建议不要动。绿色框1是决定是否在桌面创建快捷方式的。绿色框2是决定在所有控制台窗口中使用TrueType字体和是否每天检查Git是否有Windows更新的。这些根据自己需要选择。</p>
</blockquote>
<ol start="4">
<li>选择开始菜单页</li>
</ol>
<p><img src="/images_blog/git-install/git-install-5.png" alt="gti"></p>
<blockquote>
<p>这个页面是添加开始菜单，也可以选中下方框框，不添加开始菜单</p>
</blockquote>
<ol start="5">
<li>选择git文件默认的编辑器</li>
</ol>
<p><img src="/images_blog/git-install/git-install-6.png" alt="gti"></p>
<blockquote>
<p>这个页面是在选择Git文件默认的编辑器，很少用到，所以默认Vim即可，直接点“Next”按钮继续到下图的界面</p>
</blockquote>
<ol start="6">
<li>调整你的PATH环境</li>
</ol>
<p><img src="/images_blog/git-install/git-install-7.png" alt="gti"></p>
<p>这个界面是调整您的PATH环境。</p>
<pre><code>第一种配置是“仅从Git Bash使用Git”。这是最安全的选择，因为您的PATH根本不会被修改。您只能使用 Git Bash 的 Git 命令行工具。但是这将不能通过第三方软件使用。

第二种配置是“从命令行以及第三方软件进行Git”。该选项被认为是安全的，因为它仅向PATH添加了一些最小的Git包装器，以避免使用可选的Unix工具造成环境混乱。</code></pre>
<p>您将能够从Git Bash，命令提示符和Windows PowerShell以及在PATH中寻找Git的任何第三方软件中使用Git。这也是推荐的选项。</p>
<pre><code>第三种配置是“从命令提示符使用Git和可选的Unix工具”。警告：这将覆盖Windows工具，如 “ find 和 sort ”。只有在了解其含义后才使用此选项。

默认第二种配置，点击“Next”按钮继续到下图的界面</code></pre>
<ol start="7">
<li>选择https后端传输</li>
</ol>
<p><img src="/images_blog/git-install/git-install-8.png" alt="gti"></p>
<p>这个界面是选择HTTPS后端传输。</p>
<pre><code>第一个选项是“使用 OpenSSL 库”。服务器证书将使用ca-bundle.crt文件进行验证。这也是我们常用的选项。

第二个选项是“使用本地 Windows 安全通道库”。服务器证书将使用Windows证书存储验证。此选项还允许您使用公司的内部根CA证书，例如通过Active Directory Domain Services 。

默认选择第一项，点击“Next”按钮继续到下图的界面：</code></pre>
<ol start="8">
<li>配置行尾符号转换</li>
</ol>
<p><img src="/images_blog/git-install/git-install-9.png" alt="gti"></p>
<p>这个界面是配置行尾符号转换。</p>
<pre><code>第一个选项是“签出Windows风格，提交Unix风格的行尾”。签出文本文件时，Git会将LF转换为CRLF。提交文本文件时，CRLF将转换为LF。对于跨平台项目，这是Windows上的推荐设置（“ core.autocrlf”设置为“ true”）

第二个选项是“按原样签出，提交Unix样式的行尾”。签出文本文件时，Git不会执行任何转换。 提交文本文件时，CRLF将转换为LF。对于跨平台项目，这是Unix上的建议设置（“ core.autocrlf”设置为“ input”）

第三种选项是“按原样签出，按原样提交”。当签出或提交文本文件时，Git不会执行任何转换。不建议跨平台项目选择此选项（“ core.autocrlf”设置为“ false”）

选择第一种选项，点击“Next”按钮继续到下图的界面：</code></pre>
<ol start="9">
<li>配置终端模拟器已与Git Bash 一起使用</li>
</ol>
<p><img src="/images_blog/git-install/git-install-10.png" alt="gti"></p>
<p>这个界面是配置终端模拟器以与Git Bash一起使用。</p>
<pre><code>第一个选项是“使用MinTTY（MSYS2的默认终端）”。Git Bash将使用MinTTY作为终端模拟器，该模拟器具有可调整大小的窗口，非矩形选择和Unicode字体。Windows控制台程序（例如交互式Python）必须通过“ winpty”启动才能在MinTTY中运行。

第二个选项是“使用Windows的默认控制台窗口”。Git将使用Windows的默认控制台窗口（“cmd.exe”），该窗口可以与Win32控制台程序（如交互式Python或node.js）一起使用，但默认的回滚非常有限，需要配置为使用unicode 字体以正确显示非ASCII字符，并且在Windows 10之前，其窗口不能自由调整大小，并且只允许矩形文本选择。

默认选择的第一种选项，点击“Next”按钮继续到下图的界面：</code></pre>
<ol start="10">
<li>配置额外的选项</li>
</ol>
<p><img src="/images_blog/git-install/git-install-11.png" alt="gti"></p>
<p>这个界面是配置配置额外的选项。</p>
<pre><code>第一个选项是“启用文件系统缓存”。文件系统数据将被批量读取并缓存在内存中用于某些操作（“core.fscache”设置为“true”）。 这提供了显著的性能提升。

第二个选项是“启用Git凭证管理器”。Windows的Git凭证管理器为Windows提供安全的Git凭证存储，最显着的是对Visual Studio Team Services和GitHub的多因素身份验证支持。 （需要.NET Framework v4.5.1或更高版本）。

第三个选项是“启用符号链接”。启用符号链接（需要SeCreateSymbolicLink权限）。请注意，现有存储库不受此设置的影响。

默认选择第一、第二选项，点击“Next”按钮继续到下图的界面：</code></pre>
<ol start="11">
<li>配置实验选项</li>
</ol>
<p><img src="/images_blog/git-install/git-install-12.png" alt="gti"></p>
<p>这个界面是配置实验选项。</p>
<pre><code>启用实验性的内置添加 -i / -p。（新！）使用实验性的内置交互式add（“ git add -i”或“ git add -p”）。这使其速度更快（尤其是启动！），但尚未被认为是可靠的。

默认不勾选，直接点击“Next”按钮继续到下图的安装进度界面</code></pre>
<ol start="12">
<li>安装进度提示</li>
</ol>
<p><img src="/images_blog/git-install/git-install-13.png" alt="gti"></p>
<p>安装进度结束之后，会出现下图的完成Git安装向导界面</p>
<ol start="13">
<li>安装完成</li>
</ol>
<p><img src="/images_blog/git-install/git-install-14.png" alt="gti"></p>
<p>在这个界面，可以勾选是否启动启动Git Bash和是否查看发行说明，然后点“Finish”按钮退出安装界面。</p>
<ol start="14">
<li>启动测试</li>
</ol>
<p>到此，Git的安装完成，可以在开始菜单中看到Git的两个个启动图标（Git Bash、Git GUI）。</p>
<p>  Git Bash，是Git配套的一个控制台，点击打开如下图：</p>
<p><img src="/images_blog/git-install/git-install-15.png" alt="gti"></p>
<p>Git GUI，是Git的可视化操作工具，点击打开如下图：</p>
<p><img src="/images_blog/git-install/git-install-16.png" alt="gti"></p>
<p>以上就是git安装的全过程</p>
<h2 id="全局使用git"><a href="#全局使用git" class="headerlink" title="全局使用git"></a>全局使用git</h2><blockquote>
<p>如果想在全局使用git在系统环境变量中找到path在里面添加<code>git安装路径\cmd</code></p>
</blockquote>
<p><em>如对博文有什么建议，或者问题请进入关于页面联系博主</em></p>
]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>安装</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL安装</title>
    <url>/2020/10/17/MySQL%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<p><strong>MySQL安装[zip]</strong></p>
<p><img src="/images_blog/mysql-install/mysql-install-8.png" alt="avatar"></p>
<a id="more"></a>

<h2 id="一、资源下载"><a href="#一、资源下载" class="headerlink" title="一、资源下载"></a>一、资源下载</h2><p><a href="https://dev.mysql.com/downloads/mysql/">点击下载</a></p>
<p><img src="/images_blog/mysql-install/mysql-install-1.png" alt="avatar"></p>
<p><strong>进入之后点击红色框区域</strong></p>
<p><img src="/images_blog/mysql-install/mysql-install-2.png" alt="avatar"></p>
<h2 id="二、安装"><a href="#二、安装" class="headerlink" title="二、安装"></a>二、安装</h2><ol>
<li>直接解压在一个目录下</li>
</ol>
<p><img src="/images_blog/mysql-install/mysql-install-3.png" alt="avatar"></p>
<ol start="2">
<li><p>进入软件解压之后的文件夹中会看到以上文件，在此文件夹中创建一个data文件夹，data文件夹用来存放数据库数据</p>
</li>
<li><p>再在此文件夹下创建一个my.ini的文件文件中写入以下内容（注意不是在data文件夹下是在你解压缩的文件夹下）</p>
</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">[client]</span><br><span class="line">default_character_set = utf8mb4</span><br><span class="line"></span><br><span class="line"># mysql数据库自带客户端的相关配置</span><br><span class="line">[mysql]</span><br><span class="line">default_character_set = utf8mb4</span><br><span class="line"></span><br><span class="line"># 当前mysql数据库软件需要知道的事情</span><br><span class="line">[mysqld]</span><br><span class="line">#编码方式</span><br><span class="line">character-set-server=utf8mb4 </span><br><span class="line"># 端口号</span><br><span class="line">port=3306</span><br><span class="line"></span><br><span class="line"># 当前数据库基础文件的安装位置</span><br><span class="line">basedir=&quot;D:\MySQL5.7\mysql-5.7.29-winx64&quot;</span><br><span class="line"></span><br><span class="line"># Path to the database root数据存放目录</span><br><span class="line">datadir=&quot;D:\MySQL5.7\mysql-5.7.29-winx64\data&quot;</span><br><span class="line"></span><br><span class="line"># The default character set that will be used when a new schema or table is</span><br><span class="line"># created and no character set is defined</span><br><span class="line"></span><br><span class="line">collation_server=utf8mb4_unicode_ci</span><br><span class="line"># The default storage engine that will be used when create new tables when</span><br><span class="line">default-storage-engine=InnoDB</span><br><span class="line"># Set the SQL mode to strict</span><br><span class="line">sql-mode=&quot;STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION&quot;</span><br><span class="line"></span><br><span class="line">query_cache_type=1</span><br></pre></td></tr></table></figure>
<p>上面是数据库的一些基本配置，在初始化的时候会起作用，也可以加入一些自己的配置，地址记得更改为自己的。</p>
<p>创建之后的目录结构</p>
<p><img src="/images_blog/mysql-install/mysql-install-4.png" alt="avatar"></p>
<ol start="4">
<li>进入bin目录下进入cmd，命令都在bin目录下运行</li>
</ol>
<p>输入命令初始化数据库 <code>mysqld --initialize</code></p>
<p>命令执行成功之后会在data文件夹下生成一堆文件，是数据库初始化数据</p>
<ol start="5">
<li>启动mysql服务</li>
</ol>
<p>在控制台输入 <code>mysqld --console </code></p>
<ol start="6">
<li>进入数据库</li>
</ol>
<p>以管理员身份在bin目录下打开一个cmd窗口</p>
<p>输入 <code>mysql -uroot -p密码</code></p>
<p>上述命令中的密码在data文件夹下有一个.err文件</p>
<p><img src="/images_blog/mysql-install/mysql-install-5.png" alt="avatar"></p>
<p>打开</p>
<p><img src="/images_blog/mysql-install/mysql-install-6.png" alt="avatar"></p>
<p>图中红色框部分就是你的初始密码</p>
<p>回车进入MySQL</p>
<p><img src="/images_blog/mysql-install/mysql-install-7.png" alt="avatar"></p>
<ol start="7">
<li>修改初始密码</li>
</ol>
<p>输入 <code>SET PASSWORD = PASSWORD(&#39;123&#39;)</code> 重置密码，后面的123就是你的新密码</p>
<h2 id="三、注意事项"><a href="#三、注意事项" class="headerlink" title="三、注意事项"></a>三、注意事项</h2><ol>
<li><p>解压缩完毕后一定要在解压缩后的文件夹下创建一个data文件夹和my.ini文件夹<br>data文件夹是用来提供给数据库初始化存放数据，和你自己的数据库数据，my.ini是数据库初始化配置</p>
</li>
<li><p>一定要要先执行 <code>mysqld --initialize</code> 初始化数据库。否则执行sql命令会报错，因为没有数据库软件所需要的数据</p>
</li>
<li><p>初始化后打开服务，在data文件夹下找到.err文件打开找到密码，进入数据库之后修改密码，<br>一定要记得第一时间修改密码，如果被覆盖之后无法登陆，可以删除data文件夹下的所有文件，重新初始化</p>
</li>
<li><p>此方法安装的MySQL数据不会在Windows服务中添加服务，如需启动服务，在解压后的文件夹中进入bin目录输入 <code>mysqld --console</code><br>结束服务直接关掉cmd窗口</p>
</li>
<li><p>此方式安装的MySQL数据库与其他版本的MySQL数据库互不干扰，可以同时启动多个，但是注意端接口问题，如端口都一样会报错</p>
</li>
</ol>
<h2 id="四、编写MySQL脚本"><a href="#四、编写MySQL脚本" class="headerlink" title="四、编写MySQL脚本"></a>四、编写MySQL脚本</h2><h3 id="1、启动MySQL服务器脚本"><a href="#1、启动MySQL服务器脚本" class="headerlink" title="1、启动MySQL服务器脚本"></a>1、启动MySQL服务器脚本</h3><p>新建一个txt文件在里面输入</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">cd D:\MySQL5.7\mysql-5.7.29-winx64\bin</span><br><span class="line">d:</span><br><span class="line">mysqld --console</span><br><span class="line"></span><br><span class="line">上面换成自己的路径就可以了 d:是切换盘符</span><br></pre></td></tr></table></figure>

<p>输入以上内容后将文件后缀改成 .bat 之后可以直接双击打开，启动MySQL服务</p>
<h3 id="1、进入MySQL数据库脚本"><a href="#1、进入MySQL数据库脚本" class="headerlink" title="1、进入MySQL数据库脚本"></a>1、进入MySQL数据库脚本</h3><p>新建一个txt文件在里面输入</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">cd D:\MySQL5.7\mysql-5.7.29-winx64\bin</span><br><span class="line">d:</span><br><span class="line">mysql -uroot -p123</span><br><span class="line"></span><br><span class="line">路径和账号密码更换为自己的</span><br></pre></td></tr></table></figure>

<p>输入以上内容后将文件后缀改成 .bat 之后可以直接双击打开，进入MySQL数据库</p>
<p><em>如对博文有什么建议，或者问题请进入关于页面联系博主</em></p>
]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>安装</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/10/17/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<a id="more"></a>

<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>邮件发送</title>
    <url>/2020/10/21/%E9%82%AE%E4%BB%B6%E5%8F%91%E9%80%81/</url>
    <content><![CDATA[<p><strong>Java实现邮件发送</strong></p>
<p><img src="/images_blog/java-mail/java-mail-1.png" alt="avatar"></p>
<a id="more"></a>

<h2 id="一、依赖jar包"><a href="#一、依赖jar包" class="headerlink" title="一、依赖jar包"></a>一、依赖jar包</h2><ol>
<li><p>mail</p>
<p> <a href="https://mvnrepository.com/artifact/javax.mail/mail">点击下载</a></p>
</li>
<li><p>activation</p>
<p> <a href="https://mvnrepository.com/artifact/javax.activation/activation">点击下载</a></p>
</li>
</ol>
<h2 id="二、开启POP3-SMTP服务，获取授权码"><a href="#二、开启POP3-SMTP服务，获取授权码" class="headerlink" title="二、开启POP3/SMTP服务，获取授权码"></a>二、开启POP3/SMTP服务，获取授权码</h2><ol>
<li>进入QQ邮箱界面</li>
</ol>
<p><img src="/images_blog/java-mail/java-mail-2.png" alt="avatar">    </p>
<ol start="2">
<li>进入设置打开POP3/SMTP服务</li>
</ol>
<p><strong>点击设置–&gt;账户 找到下图页面</strong></p>
<p><img src="/images_blog/java-mail/java-mail-3.png" alt="avatar">    </p>
<h2 id="三、纯文本邮件"><a href="#三、纯文本邮件" class="headerlink" title="三、纯文本邮件"></a>三、纯文本邮件</h2><p><strong>新建类SendMail01，在类中编写sendMail方法，代码如下</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">      properties.setProperty(<span class="string">&quot;mail.host&quot;</span>, <span class="string">&quot;smtp.qq.com&quot;</span>); <span class="comment">// 设置QQ邮件服务器</span></span><br><span class="line">      properties.setProperty(<span class="string">&quot;mail.transport.protocol&quot;</span>, <span class="string">&quot;smtp&quot;</span>); <span class="comment">// 邮件发送协议</span></span><br><span class="line">      properties.setProperty(<span class="string">&quot;mail.smtp.auth&quot;</span>, <span class="string">&quot;true&quot;</span>); <span class="comment">// 需要验证用户名密码</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// 关于QQ邮箱，还要设置SSL加密，加上以下代码即可，其他邮箱不需要</span></span><br><span class="line">      MailSSLSocketFactory sf = <span class="keyword">new</span> MailSSLSocketFactory();</span><br><span class="line">      sf.setTrustAllHosts(<span class="keyword">true</span>);</span><br><span class="line">      properties.put(<span class="string">&quot;mail.smtp.ssl.enable&quot;</span>, <span class="string">&quot;true&quot;</span>);</span><br><span class="line">      properties.put(<span class="string">&quot;mail.smtp.ssl.socketFactory&quot;</span>, sf);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 1、创建定义整个应用程序所需要的环境信息的Session对象</span></span><br><span class="line">      <span class="comment">// QQ才有，其他邮箱不用</span></span><br><span class="line">      Session session = Session.getDefaultInstance(properties, <span class="keyword">new</span> Authenticator() &#123;</span><br><span class="line">          <span class="meta">@Override</span></span><br><span class="line">          <span class="function"><span class="keyword">protected</span> PasswordAuthentication <span class="title">getPasswordAuthentication</span><span class="params">()</span> </span>&#123;</span><br><span class="line">              <span class="comment">// 发件人邮箱用户名，授权码</span></span><br><span class="line">              <span class="keyword">return</span> <span class="keyword">new</span> PasswordAuthentication(<span class="string">&quot;QQ号@qq.com&quot;</span>,<span class="string">&quot;授权码&quot;</span>);</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 开启Session的debug模式，这样就可以查看到程序发送Email的运行状态</span></span><br><span class="line">      session.setDebug(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 2、通过session得到transport对象</span></span><br><span class="line">      Transport transport = session.getTransport();</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 3、使用邮箱的用户名和授权码连接上邮箱服务器</span></span><br><span class="line">      transport.connect(<span class="string">&quot;smtp.qq.com&quot;</span>,<span class="string">&quot;QQ号@qq.com&quot;</span>, <span class="string">&quot;授权码&quot;</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 4、创建邮件:写邮件</span></span><br><span class="line">      <span class="comment">// 创建邮件对象</span></span><br><span class="line">      <span class="comment">// 注意需要传递一个session</span></span><br><span class="line">      MimeMessage message = <span class="keyword">new</span> MimeMessage(session);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 指明发送邮件的人</span></span><br><span class="line">      message.setFrom(<span class="keyword">new</span> InternetAddress(<span class="string">&quot;QQ号@qq.com&quot;</span>));</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 设置收件人</span></span><br><span class="line">      message.setRecipient(Message.RecipientType.TO, <span class="keyword">new</span> InternetAddress(<span class="string">&quot;收件人邮箱号&quot;</span>));</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 设置邮寄的主题</span></span><br><span class="line">      message.setSubject(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 设置正文</span></span><br><span class="line"><span class="comment">// 设置了文本类型为html所以可以写html代码</span></span><br><span class="line">      message.setContent(<span class="string">&quot;&lt;h1 style=&#x27;color:red&#x27;&gt;你好，这是一封测试邮件&lt;/h1&gt;&quot;</span>, <span class="string">&quot;text/html;charset=UTF-8&quot;</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 5、发送邮件</span></span><br><span class="line">      transport.sendMessage(message,message.getAllRecipients());</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 6、关闭连接</span></span><br><span class="line">      transport.close();</span><br></pre></td></tr></table></figure>

<h2 id="四、带图片的邮件"><a href="#四、带图片的邮件" class="headerlink" title="四、带图片的邮件"></a>四、带图片的邮件</h2><p><strong>新建类SendMail02，在类中编写sendMail方法，代码如下</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">      properties.setProperty(<span class="string">&quot;mail.host&quot;</span>, <span class="string">&quot;smtp.qq.com&quot;</span>); <span class="comment">// 设置QQ邮件服务器</span></span><br><span class="line">      properties.setProperty(<span class="string">&quot;mail.transport.protocol&quot;</span>, <span class="string">&quot;smtp&quot;</span>); <span class="comment">// 邮件发送协议</span></span><br><span class="line">      properties.setProperty(<span class="string">&quot;mail.smtp.auth&quot;</span>, <span class="string">&quot;true&quot;</span>); <span class="comment">// 需要验证用户名密码</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// 关于QQ邮箱，还要设置SSL加密，加上以下代码即可，其他邮箱不需要</span></span><br><span class="line">      MailSSLSocketFactory sf = <span class="keyword">new</span> MailSSLSocketFactory();</span><br><span class="line">      sf.setTrustAllHosts(<span class="keyword">true</span>);</span><br><span class="line">      properties.put(<span class="string">&quot;mail.smtp.ssl.enable&quot;</span>, <span class="string">&quot;true&quot;</span>);</span><br><span class="line">      properties.put(<span class="string">&quot;mail.smtp.ssl.socketFactory&quot;</span>, sf);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 1、创建定义整个应用程序所需要的环境信息的Session对象</span></span><br><span class="line">      <span class="comment">// QQ才有，其他邮箱不用</span></span><br><span class="line">      Session session = Session.getDefaultInstance(properties, <span class="keyword">new</span> Authenticator() &#123;</span><br><span class="line">          <span class="meta">@Override</span></span><br><span class="line">          <span class="function"><span class="keyword">protected</span> PasswordAuthentication <span class="title">getPasswordAuthentication</span><span class="params">()</span> </span>&#123;</span><br><span class="line">              <span class="comment">// 发件人邮箱用户名，授权码</span></span><br><span class="line">              <span class="keyword">return</span> <span class="keyword">new</span> PasswordAuthentication(<span class="string">&quot;QQ号@qq.com&quot;</span>,<span class="string">&quot;授权码&quot;</span>);</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 开启Session的debug模式，这样就可以查看到程序发送Email的运行状态</span></span><br><span class="line">      session.setDebug(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 2、通过session得到transport对象</span></span><br><span class="line">      Transport transport = session.getTransport();</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 3、使用邮箱的用户名和授权码连接上邮箱服务器</span></span><br><span class="line">      transport.connect(<span class="string">&quot;smtp.qq.com&quot;</span>,<span class="string">&quot;QQ号@qq.com&quot;</span>, <span class="string">&quot;授权码&quot;</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 4、创建邮件:写邮件</span></span><br><span class="line">      <span class="comment">// 创建邮件对象</span></span><br><span class="line">      <span class="comment">// 注意需要传递一个session</span></span><br><span class="line">      MimeMessage message = <span class="keyword">new</span> MimeMessage(session);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 指明发送邮件的人</span></span><br><span class="line">      message.setFrom(<span class="keyword">new</span> InternetAddress(<span class="string">&quot;QQ号@qq.com&quot;</span>));</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 设置收件人</span></span><br><span class="line">      message.setRecipient(Message.RecipientType.TO, <span class="keyword">new</span> InternetAddress(<span class="string">&quot;收件人邮箱号&quot;</span>));</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 设置邮寄的主题</span></span><br><span class="line">      message.setSubject(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">//====================================================</span></span><br><span class="line">      <span class="comment">// 准备图片数据</span></span><br><span class="line">      MimeBodyPart image = <span class="keyword">new</span> MimeBodyPart();</span><br><span class="line">      <span class="comment">// 图片需要经过数据处理   DataHandler：数据处理</span></span><br><span class="line">      DataHandler dataHandler = <span class="keyword">new</span> DataHandler(<span class="keyword">new</span> FileDataSource(<span class="string">&quot;src/avatar.png&quot;</span>)); <span class="comment">// 图片路径</span></span><br><span class="line">      image.setDataHandler(dataHandler); <span class="comment">// 在body中放入这个处理的图片数据</span></span><br><span class="line">      image.setContentID(<span class="string">&quot;bz.png&quot;</span>); <span class="comment">// 给图片设置一个id，在后面可以使用</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// 准备正文数据</span></span><br><span class="line">      MimeBodyPart text = <span class="keyword">new</span> MimeBodyPart();</span><br><span class="line">      text.setContent(<span class="string">&quot;这是一封邮件正文带图片&lt;img src=&#x27;cid:bz.png&#x27;&gt;的邮件&quot;</span>,<span class="string">&quot;text/html;charset=UTF-8&quot;</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 描述数据关系</span></span><br><span class="line">      MimeMultipart mimeMultipart = <span class="keyword">new</span> MimeMultipart();</span><br><span class="line">      mimeMultipart.addBodyPart(text);</span><br><span class="line">      mimeMultipart.addBodyPart(image);</span><br><span class="line">      <span class="comment">// setSubType()参数</span></span><br><span class="line">      <span class="comment">// alternative：纯文本 related：有内嵌资源（如图片）mixed：有附件</span></span><br><span class="line">      mimeMultipart.setSubType(<span class="string">&quot;related&quot;</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 设置到消息中，保存修改</span></span><br><span class="line">      message.setContent(mimeMultipart); <span class="comment">// 把最后编辑好的邮件放到消息当中</span></span><br><span class="line">      message.saveChanges();</span><br><span class="line">      <span class="comment">//====================================================</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// 5、发送邮件</span></span><br><span class="line">      transport.sendMessage(message,message.getAllRecipients());</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 6、关闭连接</span></span><br><span class="line">      transport.close();</span><br></pre></td></tr></table></figure>

<h2 id="五、带图片附件的邮件"><a href="#五、带图片附件的邮件" class="headerlink" title="五、带图片附件的邮件"></a>五、带图片附件的邮件</h2><p><strong>新建类SendMail03，在类中编写sendMail方法，代码如下</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">      properties.setProperty(<span class="string">&quot;mail.host&quot;</span>, <span class="string">&quot;smtp.qq.com&quot;</span>); <span class="comment">// 设置QQ邮件服务器</span></span><br><span class="line">      properties.setProperty(<span class="string">&quot;mail.transport.protocol&quot;</span>, <span class="string">&quot;smtp&quot;</span>); <span class="comment">// 邮件发送协议</span></span><br><span class="line">      properties.setProperty(<span class="string">&quot;mail.smtp.auth&quot;</span>, <span class="string">&quot;true&quot;</span>); <span class="comment">// 需要验证用户名密码</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// 关于QQ邮箱，还要设置SSL加密，加上以下代码即可，其他邮箱不需要</span></span><br><span class="line">      MailSSLSocketFactory sf = <span class="keyword">new</span> MailSSLSocketFactory();</span><br><span class="line">      sf.setTrustAllHosts(<span class="keyword">true</span>);</span><br><span class="line">      properties.put(<span class="string">&quot;mail.smtp.ssl.enable&quot;</span>, <span class="string">&quot;true&quot;</span>);</span><br><span class="line">      properties.put(<span class="string">&quot;mail.smtp.ssl.socketFactory&quot;</span>, sf);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 1、创建定义整个应用程序所需要的环境信息的Session对象</span></span><br><span class="line">      <span class="comment">// QQ才有，其他邮箱不用</span></span><br><span class="line">      Session session = Session.getDefaultInstance(properties, <span class="keyword">new</span> Authenticator() &#123;</span><br><span class="line">          <span class="meta">@Override</span></span><br><span class="line">          <span class="function"><span class="keyword">protected</span> PasswordAuthentication <span class="title">getPasswordAuthentication</span><span class="params">()</span> </span>&#123;</span><br><span class="line">              <span class="comment">// 发件人邮箱用户名，授权码</span></span><br><span class="line">              <span class="keyword">return</span> <span class="keyword">new</span> PasswordAuthentication(<span class="string">&quot;QQ号@qq.com&quot;</span>,<span class="string">&quot;授权码&quot;</span>);</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 开启Session的debug模式，这样就可以查看到程序发送Email的运行状态</span></span><br><span class="line">      session.setDebug(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 2、通过session得到transport对象</span></span><br><span class="line">      Transport transport = session.getTransport();</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 3、使用邮箱的用户名和授权码连接上邮箱服务器</span></span><br><span class="line">      transport.connect(<span class="string">&quot;smtp.qq.com&quot;</span>,<span class="string">&quot;QQ号@qq.com&quot;</span>, <span class="string">&quot;授权码&quot;</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 4、创建邮件:写邮件</span></span><br><span class="line">      MimeMessage message = imageMail(session);</span><br><span class="line">      System.out.println(message);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 5、发送邮件</span></span><br><span class="line">      transport.sendMessage(message,message.getAllRecipients());</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 6、关闭连接</span></span><br><span class="line">      transport.close();</span><br></pre></td></tr></table></figure>

<p><strong>编写imageMail方法</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 消息的固定信息</span></span><br><span class="line">      MimeMessage mimeMessage = <span class="keyword">new</span> MimeMessage(session);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 邮件发送人</span></span><br><span class="line">      mimeMessage.setFrom(<span class="keyword">new</span> InternetAddress(<span class="string">&quot;QQ号@qq.com&quot;</span>));</span><br><span class="line">      <span class="comment">// 设置收件人</span></span><br><span class="line">      mimeMessage.setRecipient(Message.RecipientType.TO, <span class="keyword">new</span> InternetAddress(<span class="string">&quot;收件人邮箱号&quot;</span>));</span><br><span class="line"></span><br><span class="line">      mimeMessage.setSubject(<span class="string">&quot;带附件的邮件&quot;</span>); <span class="comment">// 邮件主题</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * 编写邮件内容</span></span><br><span class="line"><span class="comment">       * 1.图片</span></span><br><span class="line"><span class="comment">       * 2.附件</span></span><br><span class="line"><span class="comment">       * 3.文本</span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// 图片</span></span><br><span class="line">      MimeBodyPart body1 = <span class="keyword">new</span> MimeBodyPart();</span><br><span class="line">      body1.setDataHandler(<span class="keyword">new</span> DataHandler(<span class="keyword">new</span> FileDataSource(<span class="string">&quot;src/avatar.png&quot;</span>)));</span><br><span class="line">      body1.setContentID(<span class="string">&quot;bg.png&quot;</span>); <span class="comment">// 设置图片ID</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// 文本</span></span><br><span class="line">      MimeBodyPart body2 = <span class="keyword">new</span> MimeBodyPart();</span><br><span class="line">      body2.setContent(<span class="string">&quot;这是一个带有附件图片和文本的邮件&lt;img src=&#x27;cid:bg.png&#x27;/&gt;&quot;</span>,<span class="string">&quot;text/html;charset=UTF-8&quot;</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 附件</span></span><br><span class="line">      MimeBodyPart body3 = <span class="keyword">new</span> MimeBodyPart();</span><br><span class="line">      body3.setDataHandler(<span class="keyword">new</span> DataHandler(<span class="keyword">new</span> FileDataSource(<span class="string">&quot;src/我的附件.txt&quot;</span>)));</span><br><span class="line"><span class="comment">// 如果设置文件名中存在中文可能会出现乱码</span></span><br><span class="line"><span class="comment">// 通过MimeUtility.encodeText()方法解决乱码</span></span><br><span class="line">      body3.setFileName(MimeUtility.encodeText(<span class="string">&quot;我的附件.txt&quot;</span>)); <span class="comment">// 设置附件的名字,顺便设置编码</span></span><br><span class="line"></span><br><span class="line">      MimeBodyPart body4 = <span class="keyword">new</span> MimeBodyPart();</span><br><span class="line">      body4.setDataHandler(<span class="keyword">new</span> DataHandler(<span class="keyword">new</span> FileDataSource(<span class="string">&quot;src/2.txt&quot;</span>)));</span><br><span class="line">      body4.setFileName(<span class="string">&quot;2.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 拼装邮件正文内容</span></span><br><span class="line">      MimeMultipart multipart1 = <span class="keyword">new</span> MimeMultipart();</span><br><span class="line">      multipart1.addBodyPart(body1);</span><br><span class="line">      multipart1.addBodyPart(body2);</span><br><span class="line">      multipart1.setSubType(<span class="string">&quot;related&quot;</span>); <span class="comment">// 将文本和图片内嵌</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// 内嵌号的文本和图片设置为主题</span></span><br><span class="line">      MimeBodyPart contentText = <span class="keyword">new</span> MimeBodyPart();</span><br><span class="line">      contentText.setContent(multipart1);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 拼接附件</span></span><br><span class="line">      MimeMultipart allFile = <span class="keyword">new</span> MimeMultipart();</span><br><span class="line">      allFile.addBodyPart(body3); <span class="comment">// 附件1</span></span><br><span class="line">      allFile.addBodyPart(body4); <span class="comment">// 附件2</span></span><br><span class="line">      allFile.addBodyPart(contentText); <span class="comment">// 拼接正文</span></span><br><span class="line">      allFile.setSubType(<span class="string">&quot;mixed&quot;</span>); <span class="comment">// 正文和附件都存在邮件中，类型设置为mixed</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// 放到Message消息中</span></span><br><span class="line">      mimeMessage.setContent(allFile);</span><br><span class="line">      mimeMessage.saveChanges(); <span class="comment">// 保存修改</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> mimeMessage;</span><br></pre></td></tr></table></figure>

<h2 id="六、问题与解决方法"><a href="#六、问题与解决方法" class="headerlink" title="六、问题与解决方法"></a>六、问题与解决方法</h2><ol>
<li><p>附件内容乱码问题<br>Java默认编码为unicode，附件从传输过去可能会直接传输unicode码过去。<strong>解决方法</strong>将附件编码改成GBK可以解决，之后再改成UTF-8也没有问题</p>
</li>
<li><p>附近名称乱码问题</p>
</li>
</ol>
<p><strong>解决代码，上文也有解决方法</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 通过方法MimeUtility.encodeText()设置文件名可以解决</span></span><br><span class="line">body3.setFileName(MimeUtility.encodeText(<span class="string">&quot;我的附件.txt&quot;</span>)); <span class="comment">// 设置附件的名字,顺便设置编码</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li><p>邮件发送成功，也成功接收但是邮件中没有任何内容</p>
<p> 1.附件名过长</p>
<p> 2.文件名称中包含中文没有转码</p>
</li>
</ol>
<p><em>如对博文有什么建议，或者问题请进入关于页面联系博主</em>    </p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>邮件发送</tag>
      </tags>
  </entry>
  <entry>
    <title>node.js安装</title>
    <url>/2020/10/23/node-js%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<p><strong>安装node.js并搭建一个自己的个人博客</strong></p>
<p><img src="/images_blog/node-install/node-install-0.png" alt="blog"></p>
<a id="more"></a>

<h2 id="下载node-js安装包"><a href="#下载node-js安装包" class="headerlink" title="下载node.js安装包"></a>下载node.js安装包</h2><p><a href="https://nodejs.org/zh-cn/">点击下载</a></p>
<p><img src="/images_blog/node-install/node-install-1.png" alt="blog"></p>
<p><strong>推荐下载稳定版本</strong></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol>
<li>双击进入安装程序</li>
</ol>
<p><img src="/images_blog/node-install/node-install-2.png" alt="blog"></p>
<ol start="2">
<li>统一协议</li>
</ol>
<p><img src="/images_blog/node-install/node-install-3.png" alt="blog"></p>
<ol start="3">
<li>选择安装位置</li>
</ol>
<p><img src="/images_blog/node-install/node-install-4.png" alt="blog"></p>
<ol start="4">
<li>默认安装</li>
</ol>
<p><img src="/images_blog/node-install/node-install-5.png" alt="blog"></p>
<ol start="5">
<li>安装</li>
</ol>
<p><img src="/images_blog/node-install/node-install-6.png" alt="blog"></p>
<ol start="6">
<li>安装进度条</li>
</ol>
<p><img src="/images_blog/node-install/node-install-7.png" alt="blog"></p>
<ol start="7">
<li>完成安装</li>
</ol>
<p><img src="/images_blog/node-install/node-install-8.png" alt="blog"></p>
<ol start="8">
<li>查看是否安装成功</li>
</ol>
<p>安装成功，文件夹结构如下，并在上面安装过程中已自动配置了环境变量和安装好了npm包，此时可以执行<code>node -v</code>和<code>npm -v</code> 分别查看node和npm的版本号</p>
<p><img src="/images_blog/node-install/node-install-9.png" alt="blog"></p>
<h2 id="配置npm在安装全局模块时的路径和缓存cache路径"><a href="#配置npm在安装全局模块时的路径和缓存cache路径" class="headerlink" title="配置npm在安装全局模块时的路径和缓存cache路径"></a>配置npm在安装全局模块时的路径和缓存cache路径</h2><p>在使用npm安装hexo时会默认将其安装在c盘下，不便管理，同时占用c盘资源所以这里配置自定义的全局模块安装目录，在node.js安装目录下新建两个文件夹 node_global和node_cache，然后在cmd命令下执行如下两个命令</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">npm config set prefix <span class="string">&quot;D:自己的路径\node_global&quot;</span></span><br><span class="line"></span><br><span class="line">npm config set cache <span class="string">&quot;D:自己的路径\node_cache&quot;</span></span><br></pre></td></tr></table></figure>

<p>执行成功。然后在环境变量 -&gt; 系统变量中新建一个变量名为 “NODE_PATH”， 值为“D:\Program Files\nodejs\node_modules”（替换为自己的路径）最后编辑用户变量里的Path，将相应npm的路径改为：D:\Program Files\nodejs\node_global</p>
<p><strong>配置完成</strong></p>
<h2 id="配置淘宝镜像"><a href="#配置淘宝镜像" class="headerlink" title="配置淘宝镜像"></a>配置淘宝镜像</h2><p>因为npm的网站在国外，国内使用npm下载一些插件时会因为网络问题而失败，所以更换淘宝镜像，输入以下命令</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">更换淘宝镜像</span><br><span class="line">npm config set registry https:<span class="comment">//registry.npm.taobao.org</span></span><br><span class="line"></span><br><span class="line">查看下载资源镜像</span><br><span class="line">npm config get registry</span><br><span class="line"></span><br><span class="line">还原仓库地址</span><br><span class="line">npm config set registry https:<span class="comment">//registry.npmjs.org/</span></span><br></pre></td></tr></table></figure>

<p>查看npm配置集合<code>npm config list</code></p>
<p><img src="/images_blog/node-install/node-install-10.png" alt="blog"></p>
<p>注意红框文件,上述修改的三个配置都在文件中，我们也可以在文件中直接修改</p>
<h2 id="修改路径"><a href="#修改路径" class="headerlink" title="修改路径"></a>修改路径</h2><p>输入命令更新或下载npm<code>npm install npm -g</code> -g 这个参数的意思就是安装到global目录下，也就是上面配置的目录</p>
<p>再次查看global下有哪些模块<code>npm list -global</code></p>
<p><img src="/images_blog/node-install/node-install-11.png" alt="blog"></p>
<p>现在不为空了</p>
<p><strong>注意：</strong>此时，默认的模块D:\安装包\日常软件\nodejs\node_modules 目录，将会改变为将会改变为D:\安装包\日常软件\nodejs\node_global\node_modules 目录，如果直接运行npm install等命令会报错的。我们需要在电脑属性 –》 高级系统设置 –》 环境变量中修改环境变量NODE_PATH 内容是：D:\安装包\日常软件\nodejs\node_global\node_modules<code>NODE_PATH变量已在上文中添加</code></p>
<h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><p>全局安装<code>npm install -g hexo-cli</code></p>
<p>输入命令查看hexo是否安装成功<code>hexo -v</code></p>
<p><img src="/images_blog/node-install/node-install-12.png" alt="blog"></p>
<p>出现以上信息为安装成功，红框中为版本</p>
<p><em>如对博文有什么建议，或者问题请进入关于页面联系博主</em></p>
]]></content>
      <categories>
        <category>个人博客</category>
      </categories>
      <tags>
        <tag>安装</tag>
      </tags>
  </entry>
  <entry>
    <title>使用hexo搭建个人博客</title>
    <url>/2020/10/23/%E4%BD%BF%E7%94%A8hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<p><strong>使用hexo搭建自己心仪的博客吧</strong></p>
<p><img src="/images_blog/hexo-blog/hexo-blog-0.png" alt="blog"></p>
<a id="more"></a>

<h2 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h2><ol>
<li><p>安装好node.js</p>
</li>
<li><p>安装好hexo </p>
</li>
<li><p>安装好git</p>
</li>
<li><p>拥有一个github的账号</p>
</li>
</ol>
<h2 id="搭建博客"><a href="#搭建博客" class="headerlink" title="搭建博客"></a>搭建博客</h2><ol>
<li><p>在电脑的任意位置新建一个blog文件夹博客的意思（名字随意）用于放置站点文件</p>
</li>
<li><p>在此文件下打开cmd工具</p>
</li>
</ol>
<p>输入<code>hexo init</code>需要等待一会</p>
<p><img src="/images_blog/hexo-blog/hexo-blog-1.png" alt="blog"></p>
<p>出现 Start blogging with Hexo 表示博客初始化成功</p>
<p>成功后的博客目录</p>
<p><img src="/images_blog/hexo-blog/hexo-blog-2.png" alt="blog"></p>
<p>博客已经搭建好了，拥有默认的博客样式输入<code>hexo s</code>启动本地服务</p>
<p>在网址栏输入localhost:4000看一下自己的博客吧</p>
<p><img src="/images_blog/hexo-blog/hexo-blog-3.png" alt="blog"></p>
<h2 id="创建自己的第一篇博文"><a href="#创建自己的第一篇博文" class="headerlink" title="创建自己的第一篇博文"></a>创建自己的第一篇博文</h2><p>在博客站点目录下进入cmd或者进入git bash</p>
<p>输入<code>hexo n &#39;博客文章的名字&#39;</code> 创建一篇文章</p>
<p>可以在里面写一些内容，<strong>注意：</strong>博文要使用MarkDown语法来写，关于<a href="http://chenk.me/2020/10/17/MarkDown%E8%AF%AD%E6%B3%95/">MarkDown语法可以参考我的另一篇博文</a></p>
<p>然后重新发布一下</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">hexo clean 先清除(此命令可以不执行，在遇到修改的东西不起作用时才使用)</span><br><span class="line"></span><br><span class="line">hexo g 重新解析</span><br><span class="line"></span><br><span class="line">hexo s 开启服务</span><br></pre></td></tr></table></figure>

<p><img src="/images_blog/hexo-blog/hexo-blog-4.png" alt="blog"></p>
<p>可以看到第一篇博客已经发布成功了</p>
<p>到此博客已经搭建完毕，并成功发布了自己的第一篇博客</p>
<p><em>如对博文有什么建议，或者问题请进入关于页面联系博主</em></p>
]]></content>
      <categories>
        <category>个人博客</category>
      </categories>
      <tags>
        <tag>安装</tag>
      </tags>
  </entry>
  <entry>
    <title>heox博客更换主题</title>
    <url>/2020/10/23/heox%E5%8D%9A%E5%AE%A2%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98/</url>
    <content><![CDATA[<p><strong>个人博客已经搭建成功，可是默认的主题并不是自己心仪的，那么就让我们来换一个主题吧</strong></p>
<p><img src="/images_blog/changing-theme/change-theme-0.png" alt="theme"></p>
<a id="more"></a>

<blockquote>
<p>在 Hexo 中有两份主要的配置文件，其名称都是 <code>_config.yml</code>。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。</p>
</blockquote>
<blockquote>
<p>为了描述方便，在以下说明中，将前者称为 <strong>站点配置文件</strong>， 后者称为 <strong>主题配置文件</strong></p>
</blockquote>
<h2 id="下载主题文件"><a href="#下载主题文件" class="headerlink" title="下载主题文件"></a>下载主题文件</h2><p><a href="https://hexo.io/">下载地址</a></p>
<p>进入hexo官网</p>
<p><img src="/images_blog/changing-theme/change-theme-1.png" alt="theme"></p>
<blockquote>
<p>滑到最下面,找到下图中红色部分，点击探索主题</p>
</blockquote>
<p><img src="/images_blog/changing-theme/change-theme-2.png" alt="theme"></p>
<blockquote>
<p>点击之后来到了一个新的页面，可以发现整个页面中有许多的主题，这些都是hexo的主题，可以自己选择喜欢的，我选择的是next主题</p>
</blockquote>
<p><img src="/images_blog/changing-theme/change-theme-3.png" alt="theme"></p>
<p>图中红色部分就是next主题，点击（如果找不到next主题，可以在搜索栏中搜索）</p>
<p>点击之后进入以下页面</p>
<p><img src="/images_blog/changing-theme/change-theme-4.png" alt="theme"></p>
<p>点击2020后面的地址，或者<a href="https://github.com/next-theme/hexo-theme-next">直接点击这里</a></p>
<p><img src="/images_blog/changing-theme/change-theme-5.png" alt="theme"></p>
<p>点击code选择直接下载压缩包(方便)或者你也可以选择克隆整个仓库</p>
<h2 id="解压缩文件"><a href="#解压缩文件" class="headerlink" title="解压缩文件"></a>解压缩文件</h2><ol>
<li><p>在站点文件根目录下进入themes目录</p>
</li>
<li><p>在此目录下新建一个next文件夹</p>
</li>
<li><p>把刚才下载的主题文件压缩包解压缩在新建的next目录下</p>
</li>
<li><p>解压缩之后会出现一个hexo-theme-next-master文件夹，里面就是我们的主题文件，将里面的主题文件提到next文件夹下然后删除hexo-theme-next-master文件夹**(这一步，你可以不做，我是这样做的)**</p>
</li>
</ol>
<h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h2><ol>
<li><p>打开站点配置文件</p>
</li>
<li><p>找到theme将其后面的landscape更改为next</p>
</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: https://hexo.io/plugins/</span><br><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line">theme: next</span><br></pre></td></tr></table></figure>
<p>主题更换完成，重新启动本地服务，进入你的博客就能看见新的主题了</p>
<p><em>如对博文有什么建议，或者问题请进入关于页面联系博主</em></p>
]]></content>
      <categories>
        <category>个人博客</category>
      </categories>
      <tags>
        <tag>修改主题</tag>
      </tags>
  </entry>
  <entry>
    <title>next主题配置</title>
    <url>/2020/10/23/next%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p><strong>我们已经更换好了next主题，下面让我们对其进行一些配置，使其更加满足我们的预期</strong></p>
<p><img src="/images_blog/next-config/next-config-0.png" alt="next"></p>
<a id="more"></a>

<blockquote>
<p>在 Hexo 中有两份主要的配置文件，其名称都是 <code>_config.yml</code>。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。为了描述方便，在以下说明中，将前者称为 <strong>站点配置文件</strong>， 后者称为 <strong>主题配置文件</strong>。</p>
</blockquote>
<h2 id="修改主题语言"><a href="#修改主题语言" class="headerlink" title="修改主题语言"></a>修改主题语言</h2><p>进入next主题文件夹，打开language文件夹，里面包含主题所有语言文件</p>
<p><img src="/images_blog/next-config/next-config-1.png" alt="next"></p>
<p>图中标红部分就是中文语言包，复制文件名</p>
<p>打开<strong>站点配置文件</strong>找到 language，将后面的值改为中文语言文件名</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br></pre></td></tr></table></figure>

<h2 id="修改头像"><a href="#修改头像" class="headerlink" title="修改头像"></a>修改头像</h2><p>进入<strong>主题配置文件</strong>找到 avatar</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="comment"># Replace the default image and set the url here.</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">/images/avatar.png</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be dispalyed in circle.</span></span><br><span class="line">  <span class="attr">rounded:</span> <span class="literal">false</span> <span class="comment"># 头像是圆形还是方形，false:方形  true:圆形</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be rotated with the cursor.</span></span><br><span class="line">  <span class="attr">rotated:</span> <span class="literal">false</span> <span class="comment"># 头像是否旋转 false:不旋转  true:旋转</span></span><br></pre></td></tr></table></figure>

<p>将url前面的注释去掉就可以显示头像了，头像文件在主题文件中的source文件夹下的images文件夹中，可以自己更换为自己喜欢的头像，其他头像配置上方代码中已经注明</p>
<h2 id="菜单设置"><a href="#菜单设置" class="headerlink" title="菜单设置"></a>菜单设置</h2><ol>
<li>开启菜单</li>
</ol>
<p>1.1 打开<strong>主题配置文件</strong>，找到menu</p>
<p>需要什么菜单把前面的注释去掉就会在自己的首页中显示此菜单</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-user</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-th</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="comment">#schedule: /schedule/ || fa fa-calendar</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || fa fa-sitemap</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || fa fa-heartbeat</span></span><br></pre></td></tr></table></figure>

<p>1.2 创建菜单对应文件夹</p>
<p>开启菜单之后，首页上能看到，但是点击之后什么都没有</p>
<p>输入<code>hexo new page &quot;菜单名&quot;(tags,about等菜单的名字)</code> <strong>注意一定要输入对应的菜单名如：about tags等</strong> 执行命令后会发现在站点跟目录下的source文件夹下多了菜单对应的文件夹</p>
<p>打开文件夹会看见里面会有一个 index.md的文件,打开，在里面加上<code>type: 菜单名</code> 这里以categories菜单为例</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">分类</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2020-10-17 15:18:33</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">categories</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>

<p>现在点击新开启的菜单会进入相应的页面</p>
<ol start="2">
<li>自定义菜单</li>
</ol>
<p><strong>如果对于next主题官方给出的菜单目录不满意，里面没有自己想要的怎么办呢？自定义菜单</strong></p>
<ol>
<li>进入<strong>主题配置文件</strong>找到menu</li>
</ol>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-user</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-th</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="comment">#schedule: /schedule/ || fa fa-calendar</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || fa fa-sitemap</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || fa fa-heartbeat</span></span><br><span class="line">  <span class="attr">test:</span> <span class="string">/test/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-bell</span></span><br></pre></td></tr></table></figure>

<p>在后面添加<code>test: /test/ || fa fa-bell</code> （菜单名: /菜单名/ || fa 图标 ） <a href="https://fontawesome.dashgame.com/">选择图标</a></p>
<ol start="2">
<li><p>进入主题配置目录下进入languages目录打开 zh-CN.yml 文件</p>
<p>找到menu</p>
</li>
</ol>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">首页</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">归档</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">分类</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">标签</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">关于</span></span><br><span class="line">  <span class="attr">search:</span> <span class="string">搜索</span></span><br><span class="line">  <span class="attr">schedule:</span> <span class="string">日程表</span></span><br><span class="line">  <span class="attr">sitemap:</span> <span class="string">站点地图</span></span><br><span class="line">  <span class="attr">commonweal:</span> <span class="string">公益</span> <span class="number">404</span></span><br><span class="line">  <span class="attr">test:</span> <span class="string">测试菜单</span></span><br></pre></td></tr></table></figure>

<p>在后面添加你刚添加的菜单的注释如上面代码，之后再重复上文开启菜单之后的操作就可以了，通过本地服务进入博客就可以看到你自定义的菜单了</p>
<h2 id="标签与分类菜单的使用"><a href="#标签与分类菜单的使用" class="headerlink" title="标签与分类菜单的使用"></a>标签与分类菜单的使用</h2><p>新建一篇博文<code>hexo n 新的博文</code></p>
<p>新建的文章在站点跟目录的source文件夹下的_posts文件夹下，打开刚才新建的博文，在博文的上方会发现如下代码（categories没有需要自己添加）按照下文代码格式添加自己的标签和分类，重新编译启动进入博客后点击标签菜单或分类菜单就不会是空白的了，会有刚才在文章中写的标签和分类信息</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: next主题配置</span><br><span class="line">date: 2020-10-23 21:02:16</span><br><span class="line">tags:</span><br><span class="line">	- 测试标签</span><br><span class="line">categories:</span><br><span class="line">	- 测试分类</span><br><span class="line">---</span><br><span class="line">文章的内容</span><br></pre></td></tr></table></figure>

<blockquote>
<p>每一次新建一篇博文都要自己手动添加categories很麻烦，进入站点跟目录下的scaffolds文件夹下，会看见三个md文件，打开post.md，按照如下代码修改</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">tags:</span><br><span class="line">categories:</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p>之后新建的每一篇博文都会出现以上信息</p>
<h2 id="主题样式更改"><a href="#主题样式更改" class="headerlink" title="主题样式更改"></a>主题样式更改</h2><p>进入<strong>主题配置文件</strong>找到scheme，自己喜欢什么主题只要把除它之外的其他主题注释掉就可以了</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"># Schemes</span><br><span class="line">#scheme: Muse</span><br><span class="line">#scheme: Mist</span><br><span class="line">#scheme: Pisces</span><br><span class="line">scheme: Gemini</span><br></pre></td></tr></table></figure>

<h2 id="更改标题和作者"><a href="#更改标题和作者" class="headerlink" title="更改标题和作者"></a>更改标题和作者</h2><p>进入<strong>站点配置文件</strong>找到site</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"># Site</span><br><span class="line">title: 网站标题</span><br><span class="line">subtitle: &#x27;&#x27;</span><br><span class="line">description: &#x27;&#x27;</span><br><span class="line">keywords:</span><br><span class="line">author: 作者</span><br><span class="line">language: zh-CN</span><br><span class="line">timezone: &#x27;&#x27;</span><br></pre></td></tr></table></figure>

<h2 id="添加社交连接"><a href="#添加社交连接" class="headerlink" title="添加社交连接"></a>添加社交连接</h2><p>打开<strong>主题配置文件</strong>找到social</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="attr">GitHub:</span> <span class="string">https://github.com/ck123-rgb</span> <span class="string">||</span> <span class="string">fab</span> <span class="string">fa-github</span></span><br><span class="line">  <span class="attr">gitee:</span> <span class="string">https://gitee.com/chen_wu_ming</span> <span class="string">||</span> <span class="string">fab</span> <span class="string">fa-git</span></span><br><span class="line">  <span class="string">显示的名字:</span> <span class="string">网址</span> <span class="string">||</span> <span class="string">图标</span></span><br><span class="line">  <span class="comment">#E-Mail: mailto:yourname@gmail.com || fa fa-envelope</span></span><br><span class="line">  <span class="comment">#Weibo: https://weibo.com/yourname || fab fa-weibo</span></span><br><span class="line">  <span class="comment">#Google: https://plus.google.com/yourname || fab fa-google</span></span><br><span class="line">  <span class="comment">#Twitter: https://twitter.com/yourname || fab fa-twitter</span></span><br><span class="line">  <span class="comment">#FB Page: https://www.facebook.com/yourname || fab fa-facebook</span></span><br><span class="line">  <span class="comment">#StackOverflow: https://stackoverflow.com/yourname || fab fa-stack-overflow</span></span><br><span class="line">  <span class="comment">#YouTube: https://youtube.com/yourname || fab fa-youtube</span></span><br><span class="line">  <span class="comment">#Instagram: https://instagram.com/yourname || fab fa-instagram</span></span><br><span class="line">  <span class="comment">#Skype: skype:yourname?call|chat || fab fa-skype</span></span><br></pre></td></tr></table></figure>

<h2 id="添加友情链接"><a href="#添加友情链接" class="headerlink" title="添加友情链接"></a>添加友情链接</h2><p>打开<strong>主题配置文件</strong>找到links</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">links:</span></span><br><span class="line">  <span class="attr">BigChen:</span> <span class="string">https://www.chenk.me</span></span><br><span class="line">  <span class="string">显示的名字:</span> <span class="string">地址</span></span><br></pre></td></tr></table></figure>

<h2 id="开启阅读全文"><a href="#开启阅读全文" class="headerlink" title="开启阅读全文"></a>开启阅读全文</h2><p>在一篇博文的任意位置添加 <code>&lt;!-- more --&gt;</code> 这句代码后面的内容在首页全部不可见，点击阅读全文才可以全部阅读</p>
<h2 id="修改文章中代码块部分背景"><a href="#修改文章中代码块部分背景" class="headerlink" title="修改文章中代码块部分背景"></a>修改文章中代码块部分背景</h2><p>打开<strong>主题配置文件</strong>找到codeblock</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">codeblock:</span></span><br><span class="line">  <span class="comment"># Code Highlight theme</span></span><br><span class="line">  <span class="comment"># All available themes: https://theme-next.js.org/highlight/</span></span><br><span class="line">  <span class="attr">theme:</span></span><br><span class="line">    <span class="attr">light:</span> <span class="string">代码块样式</span> <span class="comment">#修改代码块背景 </span></span><br><span class="line">    <span class="attr">dark:</span> <span class="string">代码块样式</span></span><br></pre></td></tr></table></figure>

<h2 id="开启代码块旁边复制按钮"><a href="#开启代码块旁边复制按钮" class="headerlink" title="开启代码块旁边复制按钮"></a>开启代码块旁边复制按钮</h2><p>打开<strong>主题配置文件</strong>找到copy_button</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">copy_button:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 复制按钮 false:关闭 true:开启</span></span><br></pre></td></tr></table></figure>

<h2 id="关闭底部强力驱动"><a href="#关闭底部强力驱动" class="headerlink" title="关闭底部强力驱动"></a>关闭底部强力驱动</h2><p>打开<strong>主题配置文件</strong>找到copy_buttonpowered</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Powered by Hexo &amp; NexT</span></span><br><span class="line">  <span class="attr">powered:</span> <span class="literal">false</span> <span class="comment"># 关闭强力驱动 false:关闭 true:开启</span></span><br></pre></td></tr></table></figure>

<h2 id="开启文章底部链接"><a href="#开启文章底部链接" class="headerlink" title="开启文章底部链接"></a>开启文章底部链接</h2><p>打开<strong>主题配置文件</strong>找到creative_commons</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">creative_commons:</span></span><br><span class="line">  <span class="attr">license:</span> <span class="string">by-nc-sa</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">post:</span> <span class="literal">true</span>  <span class="comment"># 开启文章底部链接 true:开启 false:关闭</span></span><br><span class="line">  <span class="attr">language:</span></span><br></pre></td></tr></table></figure>

<h2 id="侧边栏位置"><a href="#侧边栏位置" class="headerlink" title="侧边栏位置"></a>侧边栏位置</h2><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">sidebar:</span>   <span class="comment"># 侧边栏在左还是右</span></span><br><span class="line">  <span class="comment"># Sidebar Position. # 侧边栏位置</span></span><br><span class="line">  <span class="comment"># position: left</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">right</span> </span><br></pre></td></tr></table></figure>

<h2 id="开启本地搜索功能"><a href="#开启本地搜索功能" class="headerlink" title="开启本地搜索功能"></a>开启本地搜索功能</h2><p>在hexo站点目录下输入<code>npm install hexo-generator-searchdb</code></p>
<p>打开<strong>站点配置文件</strong>输入以下内容</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">content:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br></pre></td></tr></table></figure>

<p>打开<strong>主题配置文件</strong>找到local_search</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 开启本地搜索功能 false:关闭  true:开启</span></span><br><span class="line">  <span class="comment"># If auto, trigger search by changing input.</span></span><br><span class="line">  <span class="comment"># If manual, trigger search by pressing enter key or search button.</span></span><br><span class="line">  <span class="attr">trigger:</span> <span class="string">auto</span></span><br><span class="line">  <span class="comment"># Show top n results per article, show all results by setting to -1</span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># Unescape html strings to the readable one.</span></span><br><span class="line">  <span class="attr">unescape:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Preload the search data when the page loads.</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>以上为部分next主题配置，还有更多的配置可以自己研究以下。新版next主题还是很强大的</p>
<p><em>如对博文有什么建议，或者问题请进入关于页面联系博主</em></p>
]]></content>
      <categories>
        <category>个人博客</category>
      </categories>
      <tags>
        <tag>修改主题</tag>
      </tags>
  </entry>
  <entry>
    <title>序列化与反序列化</title>
    <url>/2020/12/06/%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
    <content><![CDATA[<h2 id="序列化与transient关键字"><a href="#序列化与transient关键字" class="headerlink" title="序列化与transient关键字"></a>序列化与transient关键字</h2><p><img src="/images_blog/serialize/serialize-0.png" alt="avatar"></p>
<a id="more"></a>

<h2 id="实现序列化的两种方式"><a href="#实现序列化的两种方式" class="headerlink" title="实现序列化的两种方式"></a>实现序列化的两种方式</h2><h3 id="实现java-io-Serializable接口"><a href="#实现java-io-Serializable接口" class="headerlink" title="实现java.io.Serializable接口"></a>实现java.io.Serializable接口</h3><p>编写类User</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialversionUID = <span class="number">123456L</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age; </span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">// get set toString 方法</span></span><br><span class="line">&#125;	</span><br></pre></td></tr></table></figure>

<p>测试类Test</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        serializeUser(); <span class="comment">// 序列化</span></span><br><span class="line">        deSerializeUser(); <span class="comment">// 反序列化</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 序列化</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">serializeUser</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setName(<span class="string">&quot;Java全栈工程师&quot;</span>);</span><br><span class="line">        user.setAge(<span class="number">28</span>);</span><br><span class="line"></span><br><span class="line">        ObjectOutputStream oos = <span class="keyword">new</span> ObjectOutputStream(<span class="keyword">new</span> FileOutputStream(<span class="string">&quot;G:\\test\\template\\a.txt&quot;</span>));</span><br><span class="line">        oos.writeObject(user);</span><br><span class="line">        oos.close();</span><br><span class="line">        System.out.println(<span class="string">&quot;Serializable关键字序列化：age=&quot;</span> + user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 反序列化</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">deSerializeUser</span><span class="params">()</span> <span class="keyword">throws</span> IOException, ClassNotFoundException </span>&#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File(<span class="string">&quot;G:\\test\\template\\a.txt&quot;</span>);</span><br><span class="line">        ObjectInputStream ois = <span class="keyword">new</span> ObjectInputStream(<span class="keyword">new</span> FileInputStream(file));</span><br><span class="line">        User newUser = (User) ois.readObject();</span><br><span class="line">        System.out.println(<span class="string">&quot;反序列化序列化：age=&quot;</span> + newUser.getAge());</span><br><span class="line">        System.out.println(newUser);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h3 id="实现java-io-Externalizable接口"><a href="#实现java-io-Externalizable接口" class="headerlink" title="实现java.io.Externalizable接口"></a>实现java.io.Externalizable接口</h3><p>如果使用实现java.io.Externalizable接口的方式进行序列化，必须重写writeExternal()和readExternal()方法<br>编写类People</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">People</span> <span class="keyword">implements</span> <span class="title">Externalizable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// get set toString方法</span></span><br><span class="line">	</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">writeExternal</span><span class="params">(ObjectOutput out)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">		<span class="comment">// 需要被序列化的属性</span></span><br><span class="line">        out.writeObject(name);</span><br><span class="line">        out.writeObject(age);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">readExternal</span><span class="params">(ObjectInput in)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException </span>&#123;</span><br><span class="line">        <span class="comment">// 需要被反序列化的属性</span></span><br><span class="line">		name = (String) in.readObject();</span><br><span class="line">        age = (<span class="keyword">int</span>) in.readObject();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>测试类Test2</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test2</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException </span>&#123;</span><br><span class="line">        serializePeople();</span><br><span class="line">        deSerializePeople();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">serializePeople</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        People people = <span class="keyword">new</span> People();</span><br><span class="line">        people.setName(<span class="string">&quot;Java全栈工程师&quot;</span>);</span><br><span class="line">        people.setAge(<span class="number">18</span>);</span><br><span class="line">        ObjectOutputStream oos = <span class="keyword">new</span> ObjectOutputStream(<span class="keyword">new</span> FileOutputStream(<span class="string">&quot;G:\\test\\template\\a.txt&quot;</span>));</span><br><span class="line">        oos.writeObject(people);</span><br><span class="line">        System.out.println(<span class="string">&quot;使用Externalizable接口序列化：&quot;</span> + people);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">deSerializePeople</span><span class="params">()</span> <span class="keyword">throws</span> IOException, ClassNotFoundException </span>&#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File(<span class="string">&quot;G:\\test\\template\\a.txt&quot;</span>);</span><br><span class="line">        ObjectInputStream ois = <span class="keyword">new</span> ObjectInputStream(<span class="keyword">new</span> FileInputStream(file));</span><br><span class="line">        People people = (People) ois.readObject();</span><br><span class="line">        System.out.println(<span class="string">&quot;使用Externalizable接口反序列化：&quot;</span>+people);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Serializable接口和Externalizable接口的区别"><a href="#Serializable接口和Externalizable接口的区别" class="headerlink" title="Serializable接口和Externalizable接口的区别"></a>Serializable接口和Externalizable接口的区别</h3><p>Serializable接口和Externalizable接口都能实现java对象的序列化，区别在于，Serializable接口会序列化所有的属性。Externalizable接口需要手动去指定你想序列化的属性。</p>
<p>Externalizable接口它的效率比Serializable高一些，并且可以决定哪些属性需要序列化，但是对大量对象，或者重复对象，则效率低。</p>
<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>当实现了Externalizable接口进行序列化时，如果你不想这个属性被实例化，只要在writeExternal方法中，不指定这个属性就可以了，但是如果你在readExternal方法中指定了这个属性可以被反序列化的时候，运行代码会报OptionalDataException异常。所以指定了反序列化一定要指定序列化，但是指定了序列化如果不指定反序列化，代码不会报异常，只是反序列化的时候，读取不到那个属性.</p>
<h2 id="transient关键字"><a href="#transient关键字" class="headerlink" title="transient关键字"></a>transient关键字</h2><h3 id="Serializable接口与transient"><a href="#Serializable接口与transient" class="headerlink" title="Serializable接口与transient"></a>Serializable接口与transient</h3><p>我们在上述User类中的age字段前面添加transient关键字</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">transient</span> <span class="keyword">int</span> age;</span><br></pre></td></tr></table></figure>

<p>运行代码之后发现，被transient修饰的age属性无法被序列化到本地</p>
<h3 id="Externalizable接口与transient"><a href="#Externalizable接口与transient" class="headerlink" title="Externalizable接口与transient"></a>Externalizable接口与transient</h3><p>在People类的name属性上添加transient关键字</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">transient</span> String name;</span><br></pre></td></tr></table></figure>
<p>运行代码之后发现name属性还是可以被序列化到本地</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>在使用Serializable接口进行序列化的时候，一旦给属性添加了transient关键字，该属性就不能被序列化在使用Externalizable接口进行序列化的时候，哪一个属性被序列化是我们手动去指定的，即使是transient关键字修饰也不起作用。</p>
<h2 id="transient底层实现原理是什么"><a href="#transient底层实现原理是什么" class="headerlink" title="transient底层实现原理是什么"></a>transient底层实现原理是什么</h2><p>java的serialization提供了一个非常棒的存储对象状态的机制，说白了serialization就是把对象的状态存储到硬盘上 去，等需要的时候就可以再把它读出来使用。有些时候像银行卡号这些字段是不希望在网络上传输的，transient的作用就是把这个字段的生命周期仅存于调用者的内存中而不会写到磁盘里持久化，意思是transient修饰的age字段，他的生命周期仅仅在内存中，不会被写到磁盘中。</p>
<h2 id="静态变量能被序列化吗？没被transient关键字修饰之后呢？"><a href="#静态变量能被序列化吗？没被transient关键字修饰之后呢？" class="headerlink" title="静态变量能被序列化吗？没被transient关键字修饰之后呢？"></a>静态变量能被序列化吗？没被transient关键字修饰之后呢？</h2><p>静态变量是不会被序列化的，即使没有transient关键字修饰。相信大家在很多的博客上面都看见过这句话，但是，这就话只对了一半。面对静态变量能否被序列化时，我们要分开来实验。</p>
<h3 id="通过Serializable序列化静态成员变量"><a href="#通过Serializable序列化静态成员变量" class="headerlink" title="通过Serializable序列化静态成员变量"></a>通过Serializable序列化静态成员变量</h3><p>编写类User</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialversionUID = <span class="number">123456L</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> age; </span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// get set toString方法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>测试类Test</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        serializeUser(); <span class="comment">// 序列化</span></span><br><span class="line">        deSerializeUser(); <span class="comment">// 反序列化</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 序列化</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">serializeUser</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setName(<span class="string">&quot;Java全栈工程师&quot;</span>);</span><br><span class="line">        user.setAge(<span class="number">28</span>);</span><br><span class="line"></span><br><span class="line">        ObjectOutputStream oos = <span class="keyword">new</span> ObjectOutputStream(<span class="keyword">new</span> FileOutputStream(<span class="string">&quot;G:\\test\\template\\a.txt&quot;</span>));</span><br><span class="line">        oos.writeObject(user);</span><br><span class="line">        oos.close();</span><br><span class="line">        System.out.println(user);</span><br><span class="line"></span><br><span class="line">        user.setAge(<span class="number">15</span>);</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 反序列化</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">deSerializeUser</span><span class="params">()</span> <span class="keyword">throws</span> IOException, ClassNotFoundException </span>&#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File(<span class="string">&quot;G:\\test\\template\\a.txt&quot;</span>);</span><br><span class="line">        ObjectInputStream ois = <span class="keyword">new</span> ObjectInputStream(<span class="keyword">new</span> FileInputStream(file));</span><br><span class="line">        User newUser = (User) ois.readObject();</span><br><span class="line">        System.out.println(newUser);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>运行代码之后大家会发现，反序列化之后打印的user对象的值，和序列化user对象的值不一样。如果这样感觉不直观，可以在运行一遍代码之后，注释掉serializeUser()方法，读取磁盘中刚才序列化的对象，会发现age为默认值0，代表静态变量age没有被序列化。</p>
<h3 id="通过Externalizable序列化静态成员变量"><a href="#通过Externalizable序列化静态成员变量" class="headerlink" title="通过Externalizable序列化静态成员变量"></a>通过Externalizable序列化静态成员变量</h3><p>编写类People</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">People</span> <span class="keyword">implements</span> <span class="title">Externalizable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialversionUID = <span class="number">123456L</span>;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// get set toString方法s</span></span><br><span class="line">	</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">writeExternal</span><span class="params">(ObjectOutput out)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        out.writeObject(name);</span><br><span class="line">        out.writeObject(age);</span><br><span class="line">    &#125;</span><br><span class="line">	</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">readExternal</span><span class="params">(ObjectInput in)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException </span>&#123;</span><br><span class="line">        name = (String) in.readObject();</span><br><span class="line">        age = (<span class="keyword">int</span>) in.readObject();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>编写测试类Test2</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test2</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException </span>&#123;</span><br><span class="line">        serializePeople();</span><br><span class="line">        deSerializePeople();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">serializePeople</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        People people = <span class="keyword">new</span> People();</span><br><span class="line">        people.setName(<span class="string">&quot;Oracle&quot;</span>);</span><br><span class="line">        people.setAge(<span class="number">18</span>);</span><br><span class="line">        ObjectOutputStream oos = <span class="keyword">new</span> ObjectOutputStream(<span class="keyword">new</span> FileOutputStream(<span class="string">&quot;G:\\test\\template\\a.txt&quot;</span>));</span><br><span class="line">        oos.writeObject(people);</span><br><span class="line">        System.out.println(people);</span><br><span class="line"></span><br><span class="line">        people.setAge(<span class="number">48</span>);</span><br><span class="line">        System.out.println(people);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">deSerializePeople</span><span class="params">()</span> <span class="keyword">throws</span> IOException, ClassNotFoundException </span>&#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File(<span class="string">&quot;G:\\test\\template\\a.txt&quot;</span>);</span><br><span class="line">        ObjectInputStream ois = <span class="keyword">new</span> ObjectInputStream(<span class="keyword">new</span> FileInputStream(file));</span><br><span class="line">        People people = (People) ois.readObject();</span><br><span class="line">        System.out.println(people);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>运行代码之后大家会发现，反序列化之后打印的user对象的值，和序列化user对象的值一样。如果这样感觉不直观，可以在运行一遍代码之后，注释掉serializeUser()方法，读取磁盘中刚才序列化的对象，会发现age为18，也就是刚才序列化的值，代表静态变量age被序列化成功了。</p>
<h3 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h3><ul>
<li>当通过Serializable进行序列化的时候，如果变量是static静态或者被transient修饰的，则这个变量不能被实例化。</li>
<li>当通过Externalizable进行序列化的时候，如果变量是static静态的，只要你自己手动的在writeExternal()方法中声明了这个变量被实例化，那么不管此变量是否被static或者transient修饰都能够被实例化。</li>
</ul>
<p><strong>如文章中有什么错误之处，请联系作者</strong></p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
  </entry>
  <entry>
    <title>ssm配置</title>
    <url>/2020/12/24/ssm%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="关于SSM框架的一些配置"><a href="#关于SSM框架的一些配置" class="headerlink" title="关于SSM框架的一些配置"></a>关于SSM框架的一些配置</h2><p><img src="/images_blog/ssm/ssm-0.png" alt="ssm"></p>
<a id="more"></a>

<h2 id="Spring整合Mybatis配置"><a href="#Spring整合Mybatis配置" class="headerlink" title="Spring整合Mybatis配置"></a>Spring整合Mybatis配置</h2><p><code>出现在下文的所有配置中的类名，路径，请换成自己的。</code></p>
<h3 id="mybatis-config-xml文件"><a href="#mybatis-config-xml文件" class="headerlink" title="mybatis-config.xml文件"></a>mybatis-config.xml文件</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--开启日志--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;logImpl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;STDOUT_LOGGING&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--这个包下的所有类都取别名--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.ck.entity&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">&quot;com.ck.dao.BookMapper&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>当我们使用Spring托管了mybatis之后，一般所有的配置是写在spring配置中的，但是我还是保留了mybatis的配置文件，在这个文件中，一般会配置一些setting和mapper.xml文件的映射还有别名配置。</p>
<h3 id="spring-dao-xml"><a href="#spring-dao-xml" class="headerlink" title="spring-dao.xml"></a>spring-dao.xml</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--1.关联数据库配置文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">&quot;classpath:database.properties&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--2.配置数据源DataSource--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.mchange.v2.c3p0.ComboPooledDataSource&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--配置数据源需要的一些参数--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClass&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driver&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbcUrl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.username&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--c3p0连接池的私有属性--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--连接池最大数量--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxPoolSize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;30&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--连接池最小数量--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;minPoolSize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;10&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--关闭连接后不自动commit提交事务--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;autoCommitOnClose&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--获取连接超时时间--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;checkoutTimeout&quot;</span> <span class="attr">value</span>=<span class="string">&quot;10000&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--当次获取连接失败重试次数--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;acquireRetryAttempts&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--3.sqlSessionFactory--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sqlSessionFactory&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--绑定Mybatis的配置文件--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;configLocation&quot;</span> <span class="attr">value</span>=<span class="string">&quot;classpath:mybatis-config.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--4.配置dao接口扫描包，动态的实现了Dao接口可以注入到Spring容器中--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--不用再去手动的注入每一个dao接口--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--注入sqlSession--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sqlSessionFactoryBeanName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;sqlSessionFactory&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--要扫描的包--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;basePackage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.ck.dao&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>上面就是原来写在mybatis-config.xml配置文件中的配置，但是现在是被spring托管了,所以将如DataSource等配置写在了spring配置中。上面配置中使用的是c3p0数据源，也可以更换为其他的数据源如druid、dbcp等，像数据库连接参数等，写在了properties文件中，properties文件需要自己编写，本文不会提及。</p>
<h3 id="spring-service-xml"><a href="#spring-service-xml" class="headerlink" title="spring-service.xml"></a>spring-service.xml</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:tx</span>=<span class="string">&quot;http://www.springframework.org/schema/tx&quot;</span> </span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/tx</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/tx/spring-tx.xsd </span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/aop </span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/aop/spring-aop.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--扫描所有的service--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.ck.service&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--2.将我们的所有业务类，注入Spring中，可以通过配置，或者注解实现--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;bookServiceImpl&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.ck.service.BookServiceImpl&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;bookMapper&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;bookMapper&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--3.声明式事务--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;transactionManager&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--配置事务通知：哪些方法需要添加事务--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:advice</span> <span class="attr">id</span>=<span class="string">&quot;interceptor&quot;</span> <span class="attr">transaction-manager</span>=<span class="string">&quot;transactionManager&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--给哪些·1事务配置事务，以及事务的传播性--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;*&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tx:advice</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--配置aop切入事务--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--配置切入点--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;txPointcut&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;execution(* com.ck.service.*.*(..))&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--配置通知和切入点--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">&quot;interceptor&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;txPointcut&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>在pring-service配置中，配置了如注解扫描，事务管理，AOP等功能，主要是面向业务层面的一些配置。</p>
<h3 id="spring-mvc-xml"><a href="#spring-mvc-xml" class="headerlink" title="spring-mvc.xml"></a>spring-mvc.xml</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/mvc/spring-mvc.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--1.注解驱动--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--2.静态资源过滤--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:default-servlet-handler</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--3.扫描包--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.ck.controller&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--配置视图解析器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span> <span class="attr">id</span>=<span class="string">&quot;internalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/jsp/&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>spring-mvc.xml配置文件主要是关于mvc的一些配置，其中包括注解支持，静态资源过滤，注解扫描包，和视图解析等。在这里可以不配置处理器映射器和处理器适配器</p>
<h3 id="applicationContext-xml"><a href="#applicationContext-xml" class="headerlink" title="applicationContext.xml"></a>applicationContext.xml</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">&quot;classpath:spring-dao.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">&quot;classpath:spring-service.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">&quot;classpath:spring-mvc.xml&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>这个配置文件相当于一个主配置文件，让其他三个配置文件关联了起来，这样写的好处是便于管理，关于dao的和service的和mvc的spring配置写在不同的配置文件中，最后通过主配置文件关联起来，这样便于阅读和更改配置。需要注意的是，当我们在web.xml中配置关联文件时，一定要写主配置文件也就是applicationContext.xml配置文件，否则会出现一些错误，因为其他的配置文件中没有互相包含。</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>配置</tag>
      </tags>
  </entry>
</search>
